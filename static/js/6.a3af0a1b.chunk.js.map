{"version":3,"sources":["common/Redirect/RedirectLogin.js","redux/selectors/profileSelector.js","components/Setting/SettingWrapper.module.css","components/Setting/Setting.module.css","components/Setting/SettingForm.js","components/Setting/SettingWrapper.js"],"names":["withLoginRedirect","Component","RedirectComponent","this","props","isAuth","state","to","React","connect","getAuthStatus","getProfile","profilePage","profile","getStatus","status","getProfilePage","getCommonAvatar","commonAvatar","module","exports","SettingForm","formikProfile","useFormik","initialValues","aboutMe","facebook","contacts","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","onSubmit","values","submitProps","formData","userId","setProfileInfo","setStatus","console","log","validate","errors","error","map","item","index","className","classes","profileSetting","handleSubmit","formArea","inputContainer","htmlFor","type","id","name","onChange","handleChange","onBlur","handleBlur","value","touched","text","placeholder","textareaContainer","textarea","buttonContainer","normal","actionCreators","requestProfile","compose","getAuthUserId","useState","setProfile","useEffect","settingForm","preloaderProfile"],"mappings":"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","file":"static/js/6.a3af0a1b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthStatus} from \"../../redux/selectors/authSelector\";\r\n\r\nexport const withLoginRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n            return <Component {...this.state}/>\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => {\r\n        return ({\r\n            isAuth: getAuthStatus(state)\r\n        })\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","export const getProfile = (state) => {\r\n    return state.profilePage.profile\r\n}\r\n\r\nexport const getStatus = (state) => {\r\n    return state.profilePage.status\r\n}\r\n\r\nexport const getProfilePage = (state) => {\r\n    return state.profilePage\r\n}\r\n\r\nexport const getCommonAvatar = (state) => {\r\n    return state.profilePage.commonAvatar\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderProfile\":\"SettingWrapper_preloaderProfile__1uZDp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderProfile\":\"Setting_preloaderProfile__1mCOU\",\"profileSetting\":\"Setting_profileSetting__V_b5-\",\"formArea\":\"Setting_formArea__19NmL\",\"inputContainer\":\"Setting_inputContainer__73Qmx\",\"text\":\"Setting_text__1NaqF\",\"error\":\"Setting_error__FdivD\",\"textareaContainer\":\"Setting_textareaContainer__1Xg7i\",\"textarea\":\"Setting_textarea__3ONxP\",\"apiErrors\":\"Setting_apiErrors__3pTSC\",\"buttonContainer\":\"Setting_buttonContainer__27pKt\",\"normal\":\"Setting_normal__2SffL\"};","import classes from \"./Setting.module.css\"\r\nimport {useFormik} from \"formik\";\r\n\r\nconst SettingForm = (props) => {\r\n\r\n    const formikProfile = useFormik({\r\n        initialValues: {\r\n            aboutMe: props.profile.aboutMe,\r\n            facebook: props.profile.contacts.facebook,\r\n            website: props.profile.contacts.website,\r\n            vk: props.profile.contacts.vk,\r\n            twitter: props.profile.contacts.twitter,\r\n            instagram: props.profile.contacts.instagram,\r\n            youtube: props.profile.contacts.youtube,\r\n            github: props.profile.contacts.github,\r\n            mainLink: props.profile.contacts.mainLink,\r\n            lookingForAJob: props.profile.lookingForAJob,\r\n            lookingForAJobDescription: props.profile.lookingForAJobDescription,\r\n            fullName: props.profile.fullName,\r\n        },\r\n\r\n        onSubmit: (values, submitProps) => {\r\n            let formData = {\r\n                aboutMe: values.aboutMe,\r\n                contacts: {\r\n                    facebook: values.facebook,\r\n                    website: values.website,\r\n                    vk: values.vk,\r\n                    twitter: values.twitter,\r\n                    instagram: values.instagram,\r\n                    youtube: values.youtube,\r\n                    github: values.github,\r\n                    mainLink: values.mainLink\r\n                },\r\n                lookingForAJob: values.lookingForAJob,\r\n                lookingForAJobDescription: values.lookingForAJobDescription,\r\n                fullName: values.fullName,\r\n                userId: values.userId,\r\n            }\r\n            props.setProfileInfo(formData, submitProps.setStatus)\r\n            console.log(formData)\r\n        },\r\n\r\n        validate: values => {\r\n            let errors = {}\r\n\r\n            if (!values.aboutMe) {\r\n                errors.aboutMe = \"Required\"\r\n            }\r\n\r\n            if (!values.fullName) {\r\n                errors.fullName = \"Required\"\r\n            }\r\n\r\n            return errors\r\n        }\r\n    })\r\n\r\n    let apiErrors\r\n    if (formikProfile.status) {\r\n        apiErrors = formikProfile.status.error.map((item, index) => <p key={index}>{item}</p>)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileSetting}>\r\n            <form onSubmit={formikProfile.handleSubmit} className={classes.formArea}>\r\n                <div className={classes.inputContainer}>\r\n                    <label htmlFor=\"fullName\">Full name</label>\r\n                    <input type=\"text\"\r\n                           id=\"fullName\"\r\n                           name=\"fullName\"\r\n                           onChange={formikProfile.handleChange}\r\n                           onBlur={formikProfile.handleBlur}\r\n                           value={formikProfile.values.fullName}\r\n                           className={formikProfile.errors.fullName && formikProfile.touched.fullName ? classes.text + \" \" + classes.error : classes.text}\r\n                           placeholder={formikProfile.errors.fullName && formikProfile.touched.fullName ? formikProfile.errors.fullName : null}\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.inputContainer}>\r\n                    <label htmlFor=\"aboutMe\">AboutMe</label>\r\n                    <input type=\"text\"\r\n                           id=\"aboutMe\"\r\n                           name=\"aboutMe\"\r\n                           onChange={formikProfile.handleChange}\r\n                           onBlur={formikProfile.handleBlur}\r\n                           value={formikProfile.values.aboutMe}\r\n                           className={formikProfile.errors.aboutMe && formikProfile.touched.aboutMe ? classes.text + \" \" + classes.error : classes.text}\r\n                           placeholder={formikProfile.errors.aboutMe && formikProfile.touched.aboutMe ? formikProfile.errors.aboutMe : null}\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.inputContainer}>\r\n                    <label htmlFor=\"facebook\">Facebook</label>\r\n                    <input type=\"text\"\r\n                           id=\"facebook\"\r\n                           name=\"facebook\"\r\n                           onChange={formikProfile.handleChange}\r\n                           onBlur={formikProfile.handleBlur}\r\n                           value={formikProfile.values.facebook}\r\n                           className={classes.text}\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.inputContainer}>\r\n                    <label htmlFor=\"website\">Website</label>\r\n                    <input type=\"text\"\r\n                           id=\"website\"\r\n                           name=\"website\"\r\n                           onChange={formikProfile.handleChange}\r\n                           onBlur={formikProfile.handleBlur}\r\n                           value={formikProfile.values.website}\r\n                           className={classes.text}\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.inputContainer}>\r\n                    <label htmlFor=\"vk\">Vkontakte</label>\r\n                    <input type=\"text\"\r\n                           id=\"vk\"\r\n                           name=\"vk\"\r\n                           onChange={formikProfile.handleChange}\r\n                           onBlur={formikProfile.handleBlur}\r\n                           value={formikProfile.values.vk}\r\n                           className={classes.text}\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.inputContainer}>\r\n                    <label htmlFor=\"twitter\">Twitter</label>\r\n                    <input type=\"text\"\r\n                           id=\"twitter\"\r\n                           name=\"twitter\"\r\n                           onChange={formikProfile.handleChange}\r\n                           onBlur={formikProfile.handleBlur}\r\n                           value={formikProfile.values.twitter}\r\n                           className={classes.text}\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.inputContainer}>\r\n                    <label htmlFor=\"instagram\">Instagram</label>\r\n                    <input type=\"text\"\r\n                           id=\"instagram\"\r\n                           name=\"instagram\"\r\n                           onChange={formikProfile.handleChange}\r\n                           onBlur={formikProfile.handleBlur}\r\n                           value={formikProfile.values.instagram}\r\n                           className={classes.text}\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.inputContainer}>\r\n                    <label htmlFor=\"youtube\">Youtube</label>\r\n                    <input type=\"text\"\r\n                           id=\"youtube\"\r\n                           name=\"youtube\"\r\n                           onChange={formikProfile.handleChange}\r\n                           onBlur={formikProfile.handleBlur}\r\n                           value={formikProfile.values.youtube}\r\n                           className={classes.text}\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.inputContainer}>\r\n                    <label htmlFor=\"github\">Github</label>\r\n                    <input type=\"text\"\r\n                           id=\"github\"\r\n                           name=\"github\"\r\n                           onChange={formikProfile.handleChange}\r\n                           onBlur={formikProfile.handleBlur}\r\n                           value={formikProfile.values.github}\r\n                           className={classes.text}\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.inputContainer}>\r\n                    <label htmlFor=\"mainLink\">MainLink</label>\r\n                    <input type=\"text\"\r\n                           id=\"mainLink\"\r\n                           name=\"mainLink\"\r\n                           onChange={formikProfile.handleChange}\r\n                           onBlur={formikProfile.handleBlur}\r\n                           value={formikProfile.values.mainLink}\r\n                           className={classes.text}\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.inputContainer}>\r\n                    <label htmlFor=\"lookingForAJob\">Looking for a job</label>\r\n                    <input type=\"checkbox\"\r\n                           id=\"lookingForAJob\"\r\n                           name=\"lookingForAJob\"\r\n                           onChange={formikProfile.handleChange}\r\n                           onBlur={formikProfile.handleBlur}\r\n                           value={formikProfile.values.lookingForAJob}\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.textareaContainer}>\r\n                    <label htmlFor=\"lookingForAJobDescription\">My skills</label>\r\n                    <br/>\r\n                    <textarea id=\"lookingForAJobDescription\"\r\n                              className={classes.textarea}\r\n                              name=\"lookingForAJobDescription\"\r\n                              onChange={formikProfile.handleChange}\r\n                              onBlur={formikProfile.handleBlur}\r\n                              value={formikProfile.values.lookingForAJobDescription}\r\n                    />\r\n                </div>\r\n\r\n                <div className={classes.buttonContainer}>\r\n                    <button type=\"submit\" className={classes.normal}>save</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingForm;","import {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport classes from './SettingWrapper.module.css'\r\nimport SettingForm from \"./SettingForm\";\r\nimport {getProfile} from \"../../redux/selectors/profileSelector\";\r\nimport {requestProfile, setProfileInfo} from \"../../redux/profileReducer\";\r\nimport {getAuthUserId} from \"../../redux/selectors/authSelector\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Preloader from \"../../common/Preloader/preloader\";\r\nimport {withLoginRedirect} from \"../../common/Redirect/RedirectLogin\";\r\n\r\n\r\nconst SettingWrapper = (props) => {\r\n    let [profile, setProfile] = useState(props.profile)\r\n    useEffect(() => {\r\n        props.requestProfile(props.userId)\r\n        setProfile(props.profile)\r\n    }, [profile])\r\n\r\n    if(!props.profile) {\r\n        return (\r\n            <div className={classes.preloaderProfile}>\r\n                <Preloader />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <SettingForm profile={props.profile}\r\n                     userId={props.userId}\r\n                     requestProfile={props.requestProfile}\r\n                     setProfileInfo={props.setProfileInfo}\r\n                     className={classes.settingForm}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: getProfile(state),\r\n    userId: getAuthUserId(state)\r\n})\r\n\r\nconst actionCreators = {\r\n    requestProfile,\r\n    setProfileInfo,\r\n}\r\n\r\nexport default compose(\r\n    withLoginRedirect,\r\n    connect(mapStateToProps, actionCreators)\r\n)(SettingWrapper)\r\n"],"sourceRoot":""}