{"version":3,"sources":["common/Redirect/RedirectLogin.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogContainer/DialogsContainer.module.css","components/Dialogs/DialogContainer/DialogItems/DialogItem.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/Messages/MessageItem/MessageItem.module.css","components/Dialogs/DialogContainer/DialogItems/DialogItem.js","components/Dialogs/DialogContainer/DialogsContainer.js","components/Dialogs/Messages/MessageItem/MessageItem.js","components/Dialogs/Messages/Messages.js","components/Dialogs/Dialogs.js","redux/selectors/dialogsSelector.js","components/Dialogs/DialogsWrapper.js"],"names":["withLoginRedirect","Component","RedirectComponent","this","props","isAuth","state","to","React","connect","getAuthStatus","module","exports","DialogItem","path","id","className","classes","dialog","avatar","src","alt","dialogName","DialogsContainer","dialogsArray","dialogsData","map","item","index","name","dialogs","MessageItem","userAvatar","messageInfoContainer","messageInfo","userName","userDate","messageDate","messageText","DialogsForm","formik","useFormik","initialValues","message","onSubmit","values","submitProps","addMessage","resetForm","newMessage","handleSubmit","placeholder","onChange","handleChange","value","type","Messages","messagesArray","messagesData","text","messagesContainer","messages","Dialogs","dialogsContainer","dialogsPage","dialogsDate","messeges","getDialogsPage","actionCreators","compose"],"mappings":"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","file":"static/js/4.4065069c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthStatus} from \"../../redux/selectors/authSelector\";\r\n\r\nexport const withLoginRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n            return <Component {...this.state}/>\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => {\r\n        return ({\r\n            isAuth: getAuthStatus(state)\r\n        })\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__2rxXP\",\"dialogs\":\"Dialogs_dialogs__2UgJd\",\"messeges\":\"Dialogs_messeges__1qreV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogsContainer_dialogs__1jbL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1UIq4\",\"dialogName\":\"DialogItem_dialogName__jU_IP\",\"active\":\"DialogItem_active__2WmA_\",\"avatar\":\"DialogItem_avatar__1Jyj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesContainer\":\"Messages_messagesContainer__1g-gx\",\"messages\":\"Messages_messages__i4yLo\",\"newMessage\":\"Messages_newMessage__2vcAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MessageItem_item__3qAKz\",\"messageInfoContainer\":\"MessageItem_messageInfoContainer__1xjDz\",\"messageInfo\":\"MessageItem_messageInfo__fV9bF\",\"userName\":\"MessageItem_userName__3rZiE\",\"userDate\":\"MessageItem_userDate__haFTr\",\"messageText\":\"MessageItem_messageText__mVSVn\",\"avatar\":\"MessageItem_avatar__mX_0T\"};","import {NavLink} from \"react-router-dom\";\r\nimport classes from \"./DialogItem.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <NavLink to={path} className={`${classes.dialog}`}>\r\n            <img className={classes.avatar} src={props.avatar} alt=\"avatar\"/>\r\n            <div className={`${classes.dialogName}`}>{props.dialogName}</div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import classes from './DialogsContainer.module.css';\r\nimport DialogItem from \"./DialogItems/DialogItem\";\r\n\r\nconst DialogsContainer = (props) => {\r\n    //key={index} create for solution react-error\r\n    let dialogsArray = props.dialogsData\r\n        .map((item, index) => <DialogItem key={index} dialogName={item.name} id={item.id} avatar={item.avatar}/>)\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            {dialogsArray}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsContainer;","import classes from \"./MessageItem.module.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img className={classes.avatar} src={props.userAvatar} alt=\"avatar\"/>\r\n            <div className={classes.messageInfoContainer}>\r\n                <div className={classes.messageInfo}>\r\n                    <div className={classes.userName}>{props.userName}</div>\r\n                    <div className={classes.userDate}>\r\n                        {props.messageDate}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.messageText}>{props.messageText}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import classes from './Messages.module.css';\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport React from \"react\";\r\nimport {useFormik} from \"formik\";\r\n\r\nconst Messages = (props) => {\r\n    //key={index} create for solution react-error\r\n    let messagesArray = props.messagesData\r\n        .map((item, index) => <MessageItem\r\n            key={index}\r\n            messageText={item.text}\r\n            userAvatar={item.avatar}\r\n            userName = {item.userName}\r\n            messageDate = {item.messageDate}\r\n        />)\r\n\r\n    return (\r\n        <div className={classes.messagesContainer}>\r\n            <div className={classes.messages}>\r\n                {messagesArray}\r\n            </div>\r\n            <DialogsForm addMessage={props.addMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DialogsForm = (props) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            message: \"\",\r\n        },\r\n\r\n        onSubmit: (values, submitProps) => {\r\n            props.addMessage(values.message)\r\n            submitProps.resetForm()\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div className={classes.newMessage}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <textarea name=\"message\"\r\n                       id=\"message\"\r\n                       placeholder=\"Enter your message...\"\r\n                       onChange={formik.handleChange}\r\n                       value={formik.values.message}\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import classes from './Dialogs.module.css';\r\nimport DialogsContainer from \"./DialogContainer/DialogsContainer\";\r\nimport Messages from \"./Messages/Messages\";\r\n\r\nconst Dialogs = (props) => {\r\n    return (\r\n        <div className={classes.dialogsContainer}>\r\n            <div className={classes.dialogs}>\r\n                <DialogsContainer dialogsData={props.dialogsPage.dialogsDate}/>\r\n            </div>\r\n            <div className={classes.messeges}>\r\n                <Messages messagesData={props.dialogsPage.messagesData}\r\n                          addMessage={props.addMessage}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","export const getDialogsPage = (state) => {\r\n    return state.dialogsPage\r\n}","import {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {addMessage} from \"../../redux/dialogsReducer\";\r\nimport {withLoginRedirect} from \"../../common/Redirect/RedirectLogin\";\r\nimport {getDialogsPage} from \"../../redux/selectors/dialogsSelector\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: getDialogsPage(state)\r\n    }\r\n}\r\n\r\nconst actionCreators = {\r\n    addMessage\r\n}\r\n\r\nexport default compose(\r\n    withLoginRedirect,\r\n    connect(mapStateToProps, actionCreators),\r\n)(Dialogs)\r\n"],"sourceRoot":""}